(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28086,        565]
NotebookOptionsPosition[     27575,        544]
NotebookOutlinePosition[     27951,        560]
CellTagsIndexPosition[     27908,        557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stake", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "T"], "+", "2"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"stake", "*", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"i", "*", 
              RowBox[{"T", "/", "rounds"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "+", "1"}], ")"}], "*", 
              RowBox[{"T", "/", "rounds"}]}]}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"rounds", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"rounds", ",", "2", ",", "12", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"padS", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"S", ",", "i"}], "]"}], ",", "12"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"check", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"padS", ",", "i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Part", "[", 
          RowBox[{"S", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.7558647892304053`*^9, 3.7558648644791355`*^9}, {
   3.7558649576678677`*^9, 3.7558649643310404`*^9}, {3.7558651387161646`*^9, 
   3.7558651805252113`*^9}, {3.755865256844084*^9, 3.755865258937481*^9}, {
   3.755865361098215*^9, 3.7558654102636647`*^9}, {3.7558654402703977`*^9, 
   3.755865454764625*^9}, {3.755865529597777*^9, 3.7558656801859255`*^9}, {
   3.755865755720899*^9, 3.7558657654109764`*^9}, {3.7558658596967373`*^9, 
   3.7558658602532477`*^9}, {3.7558660610629663`*^9, 3.755866083037174*^9}, {
   3.755866132693327*^9, 3.75586613875212*^9}, {3.755866353408311*^9, 
   3.755866355889677*^9}, {3.7558668008887253`*^9, 3.755866877261429*^9}, 
   3.755866916770742*^9, 3.755867407698925*^9, {3.7558675020576086`*^9, 
   3.7558675153041735`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "43", ",", "57", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "13", ",", "30", ",", "21", ",", "36", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "12", ",", "24", ",", "13", ",", "26", ",", "18", ",", "0", ",",
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "10", ",", "9", ",", "21", ",", "12", ",", "10", ",", "24", ",",
      "11", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "7", ",", "7", ",", "9", ",", "18", ",", "11", ",", "4", ",", 
     "17", ",", "16", ",", "9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "5", ",", "7", ",", "6", ",", "9", ",", "15", ",", "10", ",", 
     "3", ",", "8", ",", "18", ",", "11", ",", "7"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7558676575038233`*^9, 3.755867683450387*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "100", ",", "99", ",", "100", ",", "100", ",", "101"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7558676575038233`*^9, 3.755867683452407*^9}}],

Cell[BoxData[
 RowBox[{"0.022822668897954736`", " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"Cos", "[", "t", "]"}], "-", 
    RowBox[{"Sin", "[", "t", "]"}], "+", 
    RowBox[{"t", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "10"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7558676575038233`*^9, 3.755867683454404*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
7r4S9aqBigWF1e1tLH5VdZRoWA38D7moePw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.01},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0.01709490373000843, 0.22674103881387664`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7558676575038233`*^9, 3.7558676834902787`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7558664283568354`*^9, 3.7558666372799597`*^9}, {
  3.755866688474021*^9, 3.7558667278476915`*^9}}]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3917, 107, 312, "Input"],
Cell[4500, 131, 1169, 28, 73, "Output"],
Cell[5672, 161, 195, 4, 44, "Output"],
Cell[5870, 167, 425, 11, 52, "Output"],
Cell[6298, 180, 21111, 357, 358, "Output"]
}, Open  ]],
Cell[27424, 540, 147, 2, 45, "Input"]
}
]
*)

(* End of internal cache information *)
