(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34649,        707]
NotebookOptionsPosition[     34124,        686]
NotebookOutlinePosition[     34470,        701]
CellTagsIndexPosition[     34427,        698]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"T", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stake", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "T"], "+", "2"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"stake", "*", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"i", "*", 
              RowBox[{"T", "/", "rounds"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "+", "1"}], ")"}], "*", 
              RowBox[{"T", "/", "rounds"}]}]}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"rounds", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"rounds", ",", "2", ",", "12", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"padS", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"S", ",", "i"}], "]"}], ",", "12"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"check", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"padS", ",", "i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Part", "[", 
          RowBox[{"S", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T", ",", " ", 
     FractionBox["T", 
      RowBox[{"6", "-", "1"}]]}], "}"}], ",", 
   RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
   RowBox[{"ExtentMarkers", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7558647892304053`*^9, 3.7558648644791355`*^9}, {
   3.7558649576678677`*^9, 3.7558649643310404`*^9}, {3.7558651387161646`*^9, 
   3.7558651805252113`*^9}, {3.755865256844084*^9, 3.755865258937481*^9}, {
   3.755865361098215*^9, 3.7558654102636647`*^9}, {3.7558654402703977`*^9, 
   3.755865454764625*^9}, {3.755865529597777*^9, 3.7558656801859255`*^9}, {
   3.755865755720899*^9, 3.7558657654109764`*^9}, {3.7558658596967373`*^9, 
   3.7558658602532477`*^9}, {3.7558660610629663`*^9, 3.755866083037174*^9}, {
   3.755866132693327*^9, 3.75586613875212*^9}, {3.755866353408311*^9, 
   3.755866355889677*^9}, {3.7558668008887253`*^9, 3.755866877261429*^9}, 
   3.755866916770742*^9, 3.755867407698925*^9, {3.7558675020576086`*^9, 
   3.7558675153041735`*^9}, 3.75591633161433*^9, {3.7559163970535555`*^9, 
   3.7559164098890495`*^9}, 3.755916498534621*^9, {3.7559174909021373`*^9, 
   3.7559174913820915`*^9}, {3.7722443421010466`*^9, 
   3.7722443948919573`*^9}, {3.7722444810790415`*^9, 3.7722444821242476`*^9}, 
   3.7722445345630994`*^9, {3.7722445851339426`*^9, 3.7722445866279497`*^9}, {
   3.7722446728141794`*^9, 3.7722446873842382`*^9}, {3.772244945772251*^9, 
   3.7722449884063063`*^9}, {3.7722450338927407`*^9, 3.772245046482094*^9}}],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "38", ",", "62", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "19", ",", "20", ",", "28", ",", "34", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "13", ",", "15", ",", "10", ",", "30", ",", "22", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "12", ",", "8", ",", "11", ",", "5", ",", "23", ",", "15", ",", 
     "19", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "10", ",", "8", ",", "8", ",", "9", ",", "3", ",", "13", ",", 
     "20", ",", "8", ",", "17", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "8", ",", "8", ",", "5", ",", "7", ",", "7", ",", "3", ",", "7",
      ",", "18", ",", "12", ",", "6", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.772245166763483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "101", ",", "101", ",", "99", ",", "100", ",", "99"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451667654777`*^9}}],

Cell[BoxData[
 RowBox[{"0.018219953030994347`", " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    RowBox[{"Cos", "[", "t", "]"}], "+", 
    RowBox[{"Sin", "[", "t", "]"}], "+", 
    RowBox[{"t", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "11"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.772245166768469*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
de2gQ2aa1u89m3gR/4U2cGyjg0L1nriPWrz46qKZ6+AWOvh1G9vr6/EiM2P/
vpnNdFidthGv2seLPWGGJ7ZtosMlnnOf9h3mxRk9u28JG+nQI3ftSbU5LzY4
pDMPbaCDkZbn7gN2vPihOP6wwno68X7hu1hzmhfPWDW5qarRYf3p0CyDC7zI
PjVgfWodHcJvxbrUufLiVdMWwQZVOvD6pSkd9ODFgHRG4nmCb8UXfa+/z4um
cvk7txM8XFwTeugpLy4Mnmz/P1u2tpo2+PHi6KienzPB1f/18hwO48UXm8nu
nwjexjJa0fiGF88qNoSdJfLFic/fNk7gxaMqt7k2E3pEN67Z9imVF0P/2Dev
J/R67xUeN8nlxXnSNxYbop4pa5mE5g/E/cY33xcS9Z68onrSrIoXWdXH6w4T
fnzy0ZT83MCLEedEb4lq0EEvCj8f+cKLHHZDxXxb6ZCSZeTb2sWLhX7PorUI
v2XqrfTNB4j4agbKQdvp4N4g+z1jhBf33Nf+JbGTDi1NgzeEpnnxc1vVowai
fz6tV+j1LHxYvy3gSi3R7x9tWvtUufnwG6dOldB+OuzqWP7+SIgPp1wtuZ8Q
8zLZ/URktywfnrf9eorPjDgfvcaMaCU+lNu8wUP8GB3e95H3L2/gwz927Q+P
EPNoMxRzK28XH2ofkHaxd6DDx4n8Hxut+fAZ7+/NJe50kJ2+5+F7ko94fmz2
M71Dh5sz+uT/zvFhW/beClFvOmxYaD4Q586HWZ8tPDe8pEMI23+pUkF8mDD+
2Sw+kdCzJs3gZgQfeh9a3V2SRodDXG79be/4MO61YjpnHh1Y+FnF/TP40Gld
O1O1mg7OYpJ3uT7xYeS2jdvTh+hQKdErfuYrH8YKOB49OEEHOan36RU9fPhY
Qs6BPE/Mt6zG4N1RPjz14wuLNi8D9FQND83w8GOJrGNO4WYGhKkJ/TQj8WP2
VdbvLTsZ8GdD2700Cj9uYBhto+xjQKLGqUxnFX488V/NsoYNA0i7bkn26fPj
xMmDwSE+DHDRhSw9I368/DytlxbAgGrgOBx5lB8tL1JteqMY4KHv72XpwI/A
+vHwjxwGDB5O+tXoyY8/O7/+4xhmQP7JbzmFhfyY8SA6tcg8BZRvD+i8LufH
pgmVFDkHYp8Hj328UcuP7jW6HknEPnetZ/2s+ZXQc2XXl42+KbBeU208dYof
hU4Yxs18TIFortvKsaoCuFm0iW6qkwoPU2VCfUME8NVTrsbS/WnE81hZ1jlK
AOe+dnTctEqDUwOb3xvECeCYlMZ9U+c00KPsy+LIFEDymeWbNi/T4O/9i588
GwXwfshfj+b2NHA+VsJ1fY0gyvxYr/pvezqYLZ+4aecqiHG1IX6O39LBJlmo
5tMtQWT1SOvMG0wHB6tSsb33BbHHe5IkPpkO17Nls9b5CSLIdpOnOTMgxKVn
bC5FEK3dGphy2zKgu9vmtP9/gjh1qtOLJzADzn44Zlx9UggDI/JcI45kwqUL
HFE7zguh0xTLSOzxTLghmfObcVkI58CrlO6cCU/cyE8D7wlh1iatL3nemUDf
2PrxZKQQ/iqSisvJzITJKNMdS+1C2LhsnvyTlAW6pUoiYSrCeOVkS+toXRYY
vZPbLLJeGG9OuAgafMkCm0eSxs/VhfFyHFkz5HsWuB8SeOa1TRi9v6+t5vmT
BentM6xOe4Vx7b6Zsr3S2UCd/Di144Qwqsguvcg8nw2bWz8IZTsIoxbjqTjJ
NRv0cvM2qp8VxmyW+912t7PB9g7diXpRGNnLM5sKX2RDEHdgH+9tYex1dNv/
OCMbuBQcWrpChLHxehu/7Gw2iK+xmzgWLoz3Y/ZR1q9kg+KvYwLNUcJocf7m
G3mOHMAUQ8PKOGH8ziiVryTngMcOjXJGpjBas386MLQlB57IrO9VzhXGyDVR
npt35kDIquJKTIEwZlpRjp/anQNZVZQdwWXCGPvNcr+7SQ6MmrFk3G0SxoXr
TpnnnHNgUXOx6W+LMG4tN2Ttv5ID3JSZ0attwmgjdChs940cUPr+S/VstzBm
Ne8QT3+QA8edP8UYjwjjqH6w0IGIHHA5XFdSOyaM1UcyjYdjcuD25o/de6aE
kWL8d+VifA6EzeVSts8Lo29LywXljBxo8Y72k+MkoRg7Ew5W5QBj0wWRQR4S
+kkzzFzriXq6twclCpBwvxvk3vqUA3paLaEaYiQcnb/0WPlbDkgNREnOUUg4
+frymoaeHJh9RXx1yZDw76GpGdN+It5/7G/2KpLQafmR+8IIES+kWZ5blYRF
f+W3rp3IgdN7o941rCehwGHjQvk/RLworfhjW0k4xN8fV7NI3G/qlHJuDwk5
8l4Kv+bOBceVbZs27CehZpjTplK+XIBktoxJQxI+cWhwqhbMhTn2yOxbZiQ0
0dgheYucC5/Tz2vpHSPhcb27vEoSuZBivy2fzZqEH1rShLIkiXh5TUW+J0m4
I6vhqrtsLqBjhK6pIwml9wQ6MuRzQZp0vpR8noS/LcdDqqhE/A+au79dIOEB
n8e2FYpEfGfWj1GXSWhlJMAdq0zEl2jSd7hGwt73KrPnVHPhSWV4tfINEnIv
X7hHUiP0ymrWp90j6imT7RfdmAtSTBaj694k5OMdun9RnYh/o7FR24eEUcku
BimbcqFFMdxk5SkJg5bl37RuzgVGy9mW8hckbCrgmf6hQcS/t/Wojz8Jj5Tm
pLVtyYXT61naDgYT/cL1hplbc0Gvo8FC6DUJu5y+atzQJPI9et3RGklCuseN
XsVtRD6NszZhMSRUMxWuLyK45fuWbrs4wh+Xlgs6WkQ+31V7hUQSvrjFuTuB
4CfaDb0/6SRs2c9Wu0yw48+wU8lpJJw+zHtfdztRX8CZgUtZJHyTv3vciWAp
2HJmax6hbzIw0Jvgud//hv4WkrCiIHruMcGfw5jni0uIeemNiPYgOGVf2IhX
BQnzXQ+SbQl+Mu3osq+ahEaR7X3rCHZ8ozHOU0/C5yI1Ab+I/Gj073JTI9Ff
la6sIIKlF+qnAlpIuHRn+bMGwXPvQ69ZtpFwl4OCZylR3+cjjrPS30jo3KVp
oEdw6urmGz+6Sahvt1KSSvjzlLEyH/eDhEnb2d1IBDta13s4DZKwv859+Szh
J3KGLm8cJuFhB/HhNMJv6azT96Z/Ezwlyhwl+jF3YjNL3gQJwzwXtWUJTimo
Y8e/JHzGYK45RfTznt2f2elFEk4I9U7fIPptuioz/P4fCWvGjQV8iHmY1r/S
wMcpghri6+aers8FrWbx4HayCJZPtjJBJRfKhk4rX94igivtvyY71+aC/9MX
FKqWCLJMsQ7FyeSCw4Y83rYdIiiVU3XxknQurHHlndi5WwQvx7LT2Ih5N1xJ
z+M0FUGOCqWdO4jzIRXTmVRwVAQ3qpT+5BfNhdE9ayJdLEVwUPkyc4CUCy+f
WHp9Pi6CX8QNxyOFCP9E/xlEXxRBsy1P3h4gzl9srsous6siyEse00XeXLhu
bbZxjZsIxhnoKgBPLoi/iSM53xFBnb2m/GZcufBrdxP7Wi8R1F8rlu3ImQv5
g39nPz0QQWlmQr8nRy7Yqh3q3OYrgshvM9nIngsbGq83DL8UwR+PyMdYCf53
ObokIkAENa/lHNJly4WYnKl3rOEiOCtyqfUTSy5ctZIOzo4SwYpNvxqVCd6z
pP/43FsRTDgwteHxag4MYtiFxkQR9OLrq3D8lwM5A+X2XgwRzNjpvK9/JQd8
fH6bbE0XwdAj+R+dCLZcJ7ZnKEsEL91hs1lazgHVBj3N13kiWPnmtXwowQuX
zisbFYngb+2+9boE15MCKKslIijYb/B8bCkHIrOLeDMrRHCt337jRIIvWv5c
dqwWwfWPzDwuEqy3KDghUS+Cegs9ZF2ChaO0++obRTDAw1pWguA+cGi92yKC
5pyqgUvEPszs963a3CaCJzvfXhgh+MGjnLyBDhFMYRGJHCDYXLU3KaRbBIuD
csi/CFZickca/hDB0x+LymcInru45eXygAgOPdzvy0/Eb5H5N3f5F+Gf4IPy
9QQzmHUnBkZEMId0K+AowY89gmstxkWwuWt/3wOCHdad0qifEsHv51leFhOs
27EhXHdWBDuPZ7qtEEx5PM+WMS+ChQ/PuO4n/JjZVnlBcVkE0zKotv/369Pg
qy+hqyJ4UPMv+yTByYG2unzsojiRvqBr+n//96jE3+MURX93k/Y8gnViSm6c
ERDF8Og5s0iiXxImz350CIvi0lGRcgrRz+mVY4ZGZFFUaaLRIwhOtB2T2iot
iqsQPppF9P8Bb8GDeFlRjJA4XGTAmgvHCx6OSlJF8UzVuz/9BJMlZEpY1oni
6yp5V2Vivu5/PniqSUsU+0kGzB/EPNoYJiY4HRFF6l4L9i/EvG+bvybcc0wU
D+ldLA3hzwXhBLhlai2K0sueQtYCuVC9pv3g9pOi+HDxTXIn8TzaWsYxvuaS
KI72XKRWEedJ8HKLxc2rxP0dlX03RHJhZG1U6e/rhP4D9T7KxPmLua3p//m2
KH72933hRpzP22osi/s8RTH2cecUWSwXLL4xHQq8RXHxrfzuVIL5t5/WjHkq
ioLy7WEN4sT5+qkeJfpCFGvYvoabEs+7iqBFjsd+onjjDf/tBoKj9lZfWgwU
Rfbn/7KAkgs3p/3bL4aKos3Pc6VJBB99a4994aLIcsVEnJfYF+qm65LMo0Wx
p46icZJgntUZUu1bQm9yyGM6wYMpZR673ovitQ1r/X8TXGr3fCA1URRLaEGV
clK5EM5nZURliOIj16dhBwh2K6TlBKeJYpbj3gcOBJs6TazlySKuc7cuXiZ4
PaXI506uKO55oOz2f+as8ZmYKBDF1uPS508S3O92xOr0B1HUbfQz3EPwB0XZ
8q9lojj7/dYrMsFno4pfBFWKYtNP4YJmQo+guK3NkVpR3LfnsPYtgnNfLigL
N4iic4jCcQGCj3OF/Wn8JIruFex3nhP1c3pplfm2iuIfL67BWcKv1Pkvzw3b
CX3N88MGBFtcvWbN1SWKp5Xdvz8k/F79j6Rc9V0U2xx5JZOIfiQ6pE9794vi
b7/949lE/0y7jEtxSBTH93RlJxD9nT865vvvP1H83pBR6UX0P6bB16p4TBTL
RThuADEfBvvUlDymRFFH2EN5gNi3kx9qp7bPiuJxLu1NF4h52p3G4Zu1LIo7
+/dVKRHzOKISZ3mVhYzROvqilsS+DYjZo7hpDRkTdorrOBP7tt/f80MyHxkX
+byztxLz/YxX9tl5ITJWy1//Mkycjy0Pii2URcnITCRfuUucrwfXFybeSpHx
rkl6656FHNgwFlp8QpaMCmVm91zncuDLGa2na6lk1C4iO3sS72uKlteor9eR
0X/D/iH1sRyo2jFm7qdNRjvdxS1fv+fApUxfBWMdMi5M+YX0deaA+Hq1cT4k
o+hy/P7qrzlwVubc48cHyJi6alYv2ZQDgsEc5vsOkbHb/VPl47ocyBWIk2c3
IWO9Ra51Y2UOcK3+KLhnQeg3Pl3ZU5gD6Tc8fXRsyPhvybIrIScHrCbXHl20
J+Oyl4qQQTqxD/psRt3OkHGFfMyN530OGFZ+kb14nYx78o3DHj8n9ofOtd9q
N8loUPKwc+FRDoTnkPKHb5Px26vAn+CZAyPxxmaOD8jI05l0Zf/VHPB9WvvA
NoCMZ8Ls+7YfzQFNtnOmkiFkLDx5q33PoRzo9uBY2/6ayMf8pya/l/DPZU/u
kbdEPtYPHmbE90GjcfGwYToZV40/3nsumANercvra7OIfjUYzNUS3xdbrHQv
788jY+tVulbPcjaEnCqZ3VNCRqvDMmIvRrLh+PUyNp0Gwn/cNMdbmQ2Trytl
1IfJeC7Gx/nF5Wx4J8txkvGbjO+048yMHLPBPHZfrNoEGT/sqodBq2woYFSv
U5kj43G70I43u7PBu7RWS36NGLq8byQdImUD+WeDqYi8GFrwfHr5NikLqp0E
gvxoYvg7OVSRJzILbo4fbhdUEcNHbRftDr/Mgp6/TfZ86mJIjY/97uKaBfG8
Lc5rdMTQr+dCpfCOLNDe3PZwzlIMhz2ZPFplmWB7uye/85UY1n5xtH+enwFs
cx4uBwLFsMH8QdrzhAxIvkKRzw4RQ57BAU/3kAxYPHP08YsoMTwlMK7LfT0D
wk3rjiFdDKPsruVvUs+ATqWc6ffVYjgUzGQfjU4Hq+bnG66uiKHPx6S/kiOp
YKGkE8N1QRyHWMjqZuLJwHRi5JVcEkeBsoZbRqNJgKkyn9xcxbHX9GuDSUUS
qG1fWRm4JY4GQqLbXC8lwT+DEtuyJ+L4t404nzWJkOCCErfixVExaMCv4nYC
zGfpvxzpE8dEt9smdnNxcHE++/3bn+L4Gx7mcn6Kg34dpQ9W/4njzzYmx5eE
OGio4hitnhTHs6cWz3Vax0FMe7Vh7Ko49tFIh+ilsWCwZMBht1YC7/07m8wW
+A5e7zl8p9FKAjkcq3nv2ccAJfAE7z47CSS5t21T1YuBsIGrYcUnJPDZs9NH
1sjFQMjDkGz6WQnk9jafTqx4AwHVvaNPr0ug+eh78ermaHh20NV+v58EJmfq
nLNkjQKeiIe/PwRK4KElhvGZukh48jvk1rZQCTSsST72yz8SfJ4XBStGS+Dh
Ns2EQ4qR4N20pomNIYHH3i9ZpBtHgMeRUL3SGgn0v/2g60Pha1h4l9SgxZRA
9ltp3F7PXsPNP0U2qU0SuIE8a1Nl8xrcg364R7VJIJV+a03Pchi4fl2XdntA
AqHu907rA2Ewpayj+2dIAj2iDzgdlg6DKzeMmc4jEuhebFnNnAiFS5Rrv6yn
iHhsFjedw0PB2aZYTntVAmcS7RwOzIXAf8lNKWlsFPT/q5kb1xQC55d+7FLh
pGA8uXM0ICEEzkZyWIkLUHC6cfceJdsQcPhu7DcjRcH7zTVL2+uCwdahjyVD
i4IF74KPVZYHQeKd6mnXnRTs+fBRS+BtEMyE0Ac19SgocaCpXfB+EDxnutXm
76OgxWoFK+4NgmJNXr8ycwqefVxHvtYcCNwmE/e9rSj409OdFpETCOZOX67p
21HwmqoRz4OIQBiLirasPU3BmISbRcFOgSDLtVWu2ZWC3hwLvT2CgeCsQCEF
uFNwbU5fj/RiAOTuWmEz96Dg3Jp4bfmhADC+UjPUfp+CdzorpDzLAiD8GaPj
9SMKdvCLqXSlBsBQnH+97VMKNgltCmeJDgDPb7apvX4UpDK6YpPvBUDDH4x5
G0TBfqcv9M1XAoAiqBxwOoyCjsY2K94OAeCoyvdQKZKCheeHDr47FgDpeybd
fr2hIA/nJf1XhgGwbNd2LimWgnuPnAg9qBcABjcKrS8kUDCBJXr8y9YACPJ/
c2gjnYLrlj2n1dUC4Af9oe5EKgV75eoNrBUCYEO106aMTAoG/mUEmUsGwM0f
xgrXcikY9KTcXUEkACoXt4puKyT0UTlflPEFgLCYJMffDxSs39nluoUzAOw2
/ZvLL6eg8CGW8husAZBoODDsUUXB7FI/Af8Vf5g5XdupU0fBq/+xjN5b9Ifd
91Ia/jVQcGVBamz3vD+8DAsoKWumoAbPcnTnnD90Zt5I9/5CQTEa6YUhwcqN
du/0Oyg4cpyMrwh2/bU7iLObgqarPHqMv/5QwqriU9tLwXsRurxvF/yBV4b/
5rMBCqabgdKlZX+w0JpyMvpFwVa2Pn4ySwC8M/1qK/ib6FfoVp3ANQEw7lx0
uHmcgjuMH64f5QmAnY9iIGCaggdEbUzlhAPA580jDfM5Ctb0ua7dKBEArQXO
NPFFCp5XL2cTlwsA+S8mYh0rFEy0dbrYqRIALuOaXOGskpi4vbTGQyMA1tBW
R9bySGLoo7dDpgcCwFR3sLuXXxI13jGuPj4aAJGWdU1vhSXxHdvxWxEnA0Dz
eWCmEkUS/1M94GJ/NwC84m/G/ZKWxD4nSS7+F8S8lNmHJMlJ4vtrFXdfRwXA
mVkVj40qkph7iFXvSHkAxHM4d/eoSaLX2JFH1C8BMCzG0HupLommTO4P9b8I
fVqb2Se2SWLPBBdLHCkQUve7nnmzg2CLjEdtKoEwaZFdY6IriaSy25O9eoFw
/Yb283R9Sawc5DTyuhwIuY89xk8aSGL3uo1vxZ8GwnxosSnJSBJ3m+vE+cQG
wu18FHM9StRv5nJ8pjMQvBcMorc6SKLq+Is0XvMgqOTxZRk8I4n8d9oCXa8H
AadUo0OQkyQa3VbdkhMcBM92mqnMXpHEm6sFY/WdQeB/2zo911MSR8//+Lvj
cjB89o0QOfdAEr1/+ljeCgkGcmTPdYnHkhixvLMusCQYwopP7bj5UhJr29o6
rEkhELPiVLEjShI75LZ+XFceAv0CDMWRGEk0DnvVhxMhoCg77hMeJ4n2XXlZ
W2RDIVHP9dASXRJTzrYKxN8LhTRPjy/FhZIo2fVnc61hGDFvvkPQQfz+Re/t
Nu5wYBFpNJjskkR/+8vzj/TDYQ9ViB7TK4nJnKL6gvfDoXpP4GXWX5J45pud
2vvlcGh8EDFfMSuJWj+LPwysREA3B4N3v6gUpimN9lqoRoMq1W8gV1wKH7BT
vVxcouG63vViFSkpNFCP6tXOiAa+GzqXeBSk8KX01IkZnTewc7ihpUFdCpWu
Kn10U4+B1/VjYUcPSiFH/YSG3om3YPFqk8qp+1J4w2lnvCNbHLyji7J8fiiF
yLNJ88KmOBiv+dux54kUppeYb6yyiwMflrJniq+k8JPvJVnX/DjIuWo6/itS
Cq235k/HX3sPZPOrOZfyCb1FLpwaC/HQQsnae2dCCldZjh7U1UuGkX9OXtv/
SCH/jN72hFvJwPZT/sP0nBTSd+TYnMlJBs2Ml1pO/6SQu9tFoXsjHcIMnddZ
CEjjbLS3dxyVASc9FIQ2r5dGY583rxWlU2Gy61XnwFlpXBM8ZTapkAFCb1yu
HvoujSPuXNNxSTnAVEk6oP1BBq/uT0v4xVUKMxtp28pD16K8dNxWddtK6Oyl
F7tFrMV4p5xNq5crocxfU1/tzVrMb5w9X/ewEnxn9x0NjF+LA1UW+gaplUD9
cP7qmZy1GC2suWGIpQpMjVJTeFrX4vbmyYojcVXAcN6hfERQFm2/FH5X66uG
AJmKFE4RWawUanl5fqYabjYd3FYkJouZS7pBAVw1sHeLnb7iWln051vMTdpY
A50L9xzm1hP8mqft680a4H5aGR1uKItxqWn/feCthTMJJhIDD2XxdnG5ylbJ
OjA/4yFm9UQWTfL11OZU6kCf9l600VcWGdq2AuFadaD4ZlEoL0AWHW2WW72P
1sFAyHtu3xhZHN97lrivDk75LC1sKZbF800n237P1oGpvvJ8QqksJtHiaS/Y
6gHZzOZkPspitHYVmUeoHuTvxU9z1svitnttLq9U6qHXzex3Z7ssXv/GI9Bg
UQ/2ZxK6vf/I4lsbzC5IqQcj2ufOv3OyWEdtVujOqwedvuUOl0VZtDeJmG4t
rwcZ+yNtFqxyWOqrHL2nrR66zFca1YTkcNvpV6HkxXqoF1FteCMihwa7Z192
sjGhsPlIPVlcDjcKin25xseEcKPE6n8ycvhsc5mdnAwTrPWPln5Wk8PBjcYn
zXcxwYDt3ocD6nIoW8aembqHCdpliUXFGnL4J2EkudOQCRSdf3nx2nJY9t+J
/nhLJnAvquZK68jh1X/VjfuPM2E+72i2H8ghMCiFeY5MaN+alO6xXw6rriSs
4b/KhOqp1tQJQznUVLwoN+HOhNy0fwzHw3I4FaGZ/e4OE0LWmycZm8thy9Oe
To/HTDhGW31LdZBDbx2/G6PhTBChL7P3n5HDwt9/lhlvmNC0ZfHMWyc5jC9+
0q0ZR+jfM7tO/qocGqeuuxzOYAJH/bRv73U5/Ly5gu9mOhMqzCbHom/KYYd3
XJtMNhN0Tv3OWOslh0mL4QNFhUxYGB4W7Xkgh+5pYyq5Hwh9V4bcIh/L4eya
NeE3yphwbX6g3dZXDv08eXazfGTCZq++HdKv5JBtYU7ZtIoJY1y9EZ0BRL6Q
V1bnapiQ/Kp75XWIHI7Z2f/cV8eEcxKdJ6zD5XDRLqX3dz2TmLf2ckq0HFo+
8LWzbmBCn3IbreOtHKazlVx72ciE6NTPj0Lfy6HeiTLwbWKCrVbzL4skOUyQ
Kukx+UT0o6TRUDxFDhdYX1zsJrhtH5Peli6HMbIJJI1mJgQ01goEZ8uhsJHi
xGGCjY9VXzbPJ/y/lrVxK8F8PR9bRIvl0PNi4N8fxO9rHcu3tpbKYYGf7y1L
gh+OlgQHfJTD6J8D/SFE/t3Xi/+a1chhKq/9mTeEvn9LBdYkphyKVqlsu0ro
L3qQV9TcJIe3dnc/4Wcy4SZfzlq/z3L4jvPq66tE/dsCMz1NvsphSoTGuxjC
n2mp9D7BTjncPZj94zXhX9q7lL1NPXJor9kaZE/466JGf/+iTw7VZSNZRgn/
12Umch3+KYf8y4fO7ythwtCOeCf+/+SQrr1bxLmICbHlsUzmqBwKWE3tt8ln
wknDtxt9J+XQ6GOPqXgOE75ZRU7xzBP+1J2j/Ekh5u3H66N1S3J4KKvrOjmZ
CUfOh+Y8WSX6GyY/yBZPxN9VV/yAXR75hMQPG0QR8Q5VerHxySP8ixm695QJ
ekIfNfr55VFx4bazyEMmrG0t7y8XlEeJtB3NbveY0GlTqn9fRB4jDjZVpbgy
wdy5kJtFSh4vzrnvHrNiwhb1goJeaXmc3Lknk/cIE0jTec6la+VRJ1tGfekg
Md+3chruKcjj0+6LkxY6TDjwNN1vRVUeiyotXTnWMkHtKMvdD2ry6BFpI2Yu
xgTBtaZOdzfIY/dzuRv3BJjwJX1i98omeXSOnRs4t1IPDh3qf5a15JF9ncHV
0K56uKeScmxZXx7p4dt9C/2J61PLu4v3y6OFfMu5ycf1sK/ISP2OgTxm6vxu
4rpXD/wmo5zLh+TxWDI5vdupHl67r89fOiKPLx9c71TFesiuSpJaOimPVh6h
KeG/6iDs1QJnkYM8Lg4+o5K76+C2teEfD0eingT5+uvNdbBnbJi5eE4ef2g0
8o7l10EzWfXu4iV55DCYeVvxpA5+n47vXbgjj4XycicOKtYBlS02bj5MHj+b
l3gPGtUCywGFurRweUytdjFRhFr47vtm7GykPE7Hg84xjVqIEIvUantD+E1q
tPIVqwXyuuDajHh57AwefGPcUwOcpo9HnbMJv52/VRx3roGRqAuaPZ/kcZNm
D/+v29WQtUOzspxTAY0ur2V9QDzf/kuWPd5+VwFHvXLsfFnKINOmfSLQUwHV
KNFO1N5SuMPrd9/0vgLqPyWNbvlQCsLOrO/rHipgimB71ulbpaC9bvB3kS9x
PSLqgcB0CfgkJN2Kea2ABXpTrxoHP4BinGawU44COnlMh1/7XATjR8eUlfMU
cE6o8O/HjCLIZ4/P789XwG1O7y4p+hfBodMS3bbFCrhvo8h6CdMicKUuUo0/
KuDP0F7npqZCKI8pTd/SooCFo4zhjk8FcDzqYMPSqAJ+Sub7yD2QB4KZo696
xhXwwwhrfFhFHpRWvzxaOqmA/T0byw3f5YH85OdO7xkFDMxKe0ZyyIO+Pbb/
8Swr4BeVjCr9gVxwHL7ASeGj4uCJrrzY0Rxw3voCNddRMZz/KdyTzQYpg01r
xNdT8XRG5F4Z9mxg2rXU/N1ARV/dT9Ijv7Jgg4+YSdFmKl42ObsonpkFYx1R
9nu0qfiErqNWbpAFV+6lepgeoKLTlT8sWZ6ZIB9oqrfFkIrPrXxqPc9lQkvC
NCv5EBVXIp71eptkwpYWraftxlQUnLX13iifCTO00tDjFlQ0ex8qK1eZATfq
PmW7nKGiolyxYZV4BlCtY9L3naPiYlLstDdbBjQNX2HIOlFRZm/yPY/xdFDk
FolrdqFi0sTyfUpNOjTvNw/UvE7Fm5Fm7ZTb6XD7q+IrAXcqnv2uiqnn00H5
7OyzoRtU4vvOY8nTIh3uPgrxDrtNRXUpzoBvW9JBrbLj6rI3FY8O+1p1dqdB
29Gki20PqSjho6zdWZQGXgO3nFJ9qMT7Zs1Wy4g0aGeTPnXyGRWf6g6G19um
wcPd9qaV/lQ899PK931/Knwv6VN/HkPFapandq+5U+GpcabamXdUZF35lhw/
kQKa372V9eKoqBlfX6jdngK+KzTZyQQqHiIX1Y8mpIC2zlkB8zQqdu0bmn5j
kgIDTC2ejRlUTHb59e77zhR4acvFwZlFxaD4XbveK6fAT4/E5bxcKvKL8Acz
VxkQUDDyW7qEitGRd4N98hmga1j0a6aUihr0Q7qCiQwY7vAdaCyn4mG31jvy
YQyA+Q1dnlVUvOOXMffzFgNGHq98taqhIqeGQPXrCwwIkWj6rFFH+OWrZvnN
ngGjWpfrBxqoOBPi1bq8lwGh1VBd3ETF87uM9Pu2M2CPhXBFcDMVj4mu3D+y
gQGv3TIKDnyh4qdPddbd4gzQ5/DOkf9KRbEXvU6z/AyYDDqSsdBO9GeeuSWS
nQH7s/8k0ruo2JHpVRU4TYc5Q7Efjj1UfCRo8NrxNx3ie7UkZHupmN9BuZwx
SAcLNyvj9h9UfMEd6uLxnQ5cfB6P/PqpOBb9M6e0gw75MRHFhoNULGKNv3i/
lQ7ntT78YRuiYpTt3+zSJjpQGr6rFf+i4hYWd7pHPR1qT7E4uP1H9Ktt5+XM
ajrc/KvwWv03FXtKOmXOfaSD6ou9zb9GqdgievZTWBkdOqhnuN6OU7GMdD7m
QAkdnub76NlMEvNhPZRwrZgOO40T3USnqVhy6eSyTBEdRgbqGA1/qMil8ylz
b+H//z/u98CjWSqujYz7/quADgeFBKThLxVP/qr35yGuL8apH5mfp6KoT1x3
IsHJO02fZixScedjvqYqIp5N89Uy52UqrtMxu3byAx34zgb+pf2j4tsO3Y6b
pXQoXspW71mlYoaEMJdQBR1c/L+eCWGl4aafd7hpVXSQUZmPNGGn4Q++tIHs
Wjo0FEt+4eagof3w/ujKBjrcObKLr4KTho/kbXSOtNBhw7DdntvcNKw4ca3M
/isduu/eu6XJS8NeiYD1v7ro8EI0Jn2Mj4bv96vdHe+jg15S+a94ARpyomLW
tWE6jOsNyJ4UoqHK3e469wk6GDsrv/gsQsPLtroP5v7R4d/qgUpfMg0Zm/vF
r3ExIDXYaUlfnIauV3QvXhRmgFA5wylPkoYzFzi3dtEYUGbRFHNFmoZ/Vfgf
G6sz4MroRPu6tQRvmT8LOxjQLLF1f6Q8Dd+sTfB+bcoArxTzu8eoNDThigxh
I+Z58173bEFFGpbadQ0NOzHA/1IB9b4KDfsf+ndteMSAI1Wwekadhvzcj6Ve
lTOAzfaUltxmGnK8MJfvbWFA5qT3xQ4NGkprdd6k9zNAVKa66+A2GvJ0977K
50iBL65G+Zt0aOihK8kSY5YCD7kvTQzr0tCuqMy06QyxD6JfKb8DGo41v0+4
4ZECQXWfg8h7if58TIjb+T4FjslbX10wpOE2Xd6Nd1hSYVTKsbP9EA3FQjyj
nkilgrfY5b25h2moveqaQduWCum8j8SumRH+8C89W+OSCvyz6QWjVjQk6VSx
nP+RCrETRVSmDQ2Fx9eF/fiXCjtHqn2T7GjInpmr9nNtGpzr7bY/e5KGsaSj
VX72aVBRx8324xwNdYr0588OpIF1peiFEica+jyPMpFiT4fJEtkvkRdomJGe
/rSKnA5rszXjrS/T8POZ60eGtdPhZvTJg63uNIzOed9v9TAd1K/lB1Q/ouFW
Ui5bukoGVF38uBT3mIZxgtILqJsBduebHB88pSHZJsVB5GgGPLUf1MIXNNxs
OHLJzTMDBg8IdxUE0bDMZoepZlcGRMicp6XE0lBwtwm/WXQmcFdLZAeWE/0z
XLJKN82GuOprVkc+0nB8cq1RxYVswJpPy8JVNKy99HiE7XE23Kh9vO9lLQ2/
hNDbBEuyYaj+79cnnwi9MlmTB9RzoPJT+8LdHhpy7S9bnhTPhfvfQuH8AqHn
7qS0N2c+LI5KMHU0FBFGdk7O7i+Gd59zx7KiFfFu3Jp+angFyGWpLb+MUcSR
itJbpJQKiAyM5nV+p4gXXd6smymtgFBzHxX5eEW0Mbu+JehnBTz/euzU8xRF
rJyzDt+6+SO4dc58cSxWxGWZM44hFR/BoH9LsVinIr5P83m461slVFXE1092
EbyVdeT3f5WwJ1bqG7NHEUV5yQ4PFytB15Ft7n6fIjoaHkMX6SrYMtSyaXxY
Ec/MdfwRtKsCmZErsdV/FXHrn39WxzuqYGIq9dkNMSU0TXbdf6qoGlw7rn3Z
IqGEY61Oh1JqqmGmRFt2nKKEjHjPnp7Wapj3rchwlFHCyfq4XaO/q4FF+WuH
GU0J1/1pUi+SqgERmxXlDRpKGCxrOCF8rQaCsOLKry1K6FHH2hRxtwbEVR4X
vtNUwnsHNijyPqkB6RlhY0ltJfRXTFLwj6wBxZeKbpyghIEtfRSDyhrYVnHo
4w8jIr90lbCdYC3kJwoLRBor4enQ5RRZiVrY+arNwtJUCR2mxzmr5GpBz+7E
SONRJTxqy7vuw+Za2D/nSiqyUcL8uWJJe7NaqO3ebutup4ShKnM3wLoWDn5c
jtM4roTXjhqv4zxVCyZ+PtqJp5QwS+z6T7xSC1Zq4SeCzyth7LMtEZde1EKn
8IkkU2cl3LLnjYN7UC3Y/aX94XNRwvUiChanI2rhVGWKj/dlJTyziaE3llgL
zsfLUy67K6FvqlhqZUUt3A4YXjJ8qISzd0NY304Repo6W7V9lDCNcsWK/pd4
P+ZrpKs8IfQ2WIqHrtRC6oMMW47nSljSdipRlKcO+q97FJUFKqHYS/HTCbJ1
sCnDJTAtWAmbPwpv+Eirgztjxy9Ehyqhy+465QrVOhA/u1f6ToQS2gevCXfe
UgcHLflvb49Vwh3BMp8u6NdBaOC/I8rvCf/6Gu8kGNTB4KdJNbEEJVT95rmu
1qgO7hm0dU4nK+HzM8knC8zrIHNH9M7UTCX0fv7Y6NTpOlh18xOJyib0bbdY
qj9bB0aZ3iO+uUr4dW+4jbRzHQypnQt3KlRCwWNRM1eu1IGUzOZFxQri9/ee
/5y5XQfnrKifRSuV8M3xIZfX9+ogO4iczFathFKy99cq368DY4EF6x91Sth4
/1DM/KM6iDD8rfGJqYTHOVkq9Ijvk+FHPTwljUrI/X6YfvFZHXj/Ky+IaFFC
3fEH53xe1sGnndn+z1qJ+mkrd6741YHMjXinW23EfDFo/XsD6iB34pmk5Tcl
5PO9QEoIrgP2DXen9nUp4XKZpcj20DowPX+5TrNHCZNV3JvTw+rgvx9Hb4n0
KWHfcPX3UxF1oLV2vxnrgBIaexVavo4k8ltrr5scVEJ+sWO9hVFE/mA11t4h
JRytsX1UHU3k/yzzrXFYCa0lMyyL39SBk6BQRvEI4ZefiUNkDKHnIOtT+igx
H1/0086+JfQ8/nMyfJy4rpmyX/odoefjT+2nk0roFZemXkhw1Gq78M1p4voG
jwt7Y+tgZFf98NkZJYRmvdVcgrffLC47NqeETYObR8hxdfAwOzVMf14Jrwx6
q9kT3DIZc2XrohL2ZjkWvyJYdmOgAXVZCUtPsoUzCL7g9Eie9I+oz/JBURbB
+e9vzK+uKmGNEK/Ee4L/B5IuRpo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.01},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 11}, {0.0175410740232876, 0.21729444672436715`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.772245166813383*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{-1.1, 0}, {1.1, 0.018219953030994347`}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.1, 0}, {3.3, 0.08985258211243541}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{3.3, 0}, {5.5, 0.08673962990828316}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{5.5, 0}, {7.7, 0.03647442184378724}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{7.7, 0}, {9.9, 0.11678041546138121`}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{9.9, 0}, {12.1, 0.2003370628927168}]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[
    1.6], {}, {{}, 
     LineBox[{{{-1.1, 0.018219953030994347`}, {1.1, 
      0.018219953030994347`}}, {{1.1, 0.08985258211243541}, {3.3, 
      0.08985258211243541}}, {{3.3, 0.08673962990828316}, {5.5, 
      0.08673962990828316}}, {{5.5, 0.03647442184378724}, {7.7, 
      0.03647442184378724}}, {{7.7, 0.11678041546138121`}, {9.9, 
      0.11678041546138121`}}, {{9.9, 0.2003370628927168}, {12.1, 
      0.2003370628927168}}}]}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->NCache[{
     Rational[-11, 10], 0}, {-1.1, 0}],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->NCache[{{
      Rational[-11, 10], 
      Rational[121, 10]}, {0, 0.2003370628927168}}, {{-1.1, 12.1}, {
     0, 0.2003370628927168}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.772245166858231*^9}}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4736, 122, 239, "Input"],
Cell[5319, 146, 252, 4, 31, "Output"],
Cell[5574, 152, 1318, 30, 52, "Output"],
Cell[6895, 184, 349, 7, 31, "Output"],
Cell[7247, 193, 578, 14, 36, "Output"],
Cell[7828, 209, 21863, 370, 240, "Output"],
Cell[29694, 581, 4414, 102, 241, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
