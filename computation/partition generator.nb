(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     38573,        771]
NotebookOptionsPosition[     37851,        752]
NotebookOutlinePosition[     38198,        767]
CellTagsIndexPosition[     38155,        764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "20"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lim", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stake", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "T"], "+", "2"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{"stake", "*", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{"F", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"i", "*", 
               RowBox[{"T", "/", "rounds"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "+", "1"}], ")"}], "*", 
               RowBox[{"T", "/", "rounds"}]}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"rounds", "-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"rounds", ",", "1", ",", "12", ",", "1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"padS", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PadRight", "[", 
      RowBox[{
       RowBox[{"Part", "[", 
        RowBox[{"S", ",", "i"}], "]"}], ",", "12"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"check", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"padS", ",", "i", ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Part", "[", 
            RowBox[{"S", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"p", "=", "1"}], ",", 
    RowBox[{"p", "<", "13"}], ",", 
    RowBox[{"p", "++"}], ",", 
    RowBox[{
     RowBox[{"padS", "[", 
      RowBox[{"[", 
       RowBox[{"p", ",", "1"}], "]"}], "]"}], "+=", 
     RowBox[{"(", 
      RowBox[{"100", "-", 
       RowBox[{"check", "[", 
        RowBox[{"[", "p", "]"}], "]"}]}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "padS", "\[IndentingNewLine]", 
 RowBox[{"padS", "[", 
  RowBox[{"[", "lim", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "padS", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newCheck", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"padS", ",", "i", ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Part", "[", 
            RowBox[{"S", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"F", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "T", ",", " ", 
      FractionBox["T", 
       RowBox[{"12", "-", "1"}]]}], "}"}], ",", 
    RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
    RowBox[{"ExtentMarkers", "\[Rule]", "None"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7824492095692267`*^9, 3.7824493706333694`*^9}, {
   3.7824494372735777`*^9, 3.782449506639504*^9}, {3.782449536995531*^9, 
   3.7824495687540216`*^9}, {3.7824496278933535`*^9, 
   3.7824497175851064`*^9}, {3.7824499530603046`*^9, 
   3.7824499631772327`*^9}, {3.782449996173936*^9, 3.78245008833498*^9}, {
   3.7824501905424805`*^9, 3.7824502095506315`*^9}, 
   3.782450369672685*^9},ExpressionUUID->"9a10e850-9513-464e-9284-\
a9557172bec2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "100", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "32", ",", "68", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17", ",", "33", ",", "50", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "20", ",", "35", ",", "33", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "17", ",", "20", ",", "24", ",", "30", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "9", ",", "15", ",", "18", ",", "22", ",", "27", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "8", ",", "14", ",", "13", ",", "18", ",", "17", ",", "22", ",",
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "5", ",", "9", ",", "11", ",", "15", ",", "20", ",", "15", ",", 
     "17", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "4", ",", "7", ",", "13", ",", "9", ",", "11", ",", "19", ",", 
     "17", ",", "14", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "3", ",", "7", ",", "10", ",", "7", ",", "13", ",", "11", ",", 
     "13", ",", "19", ",", "12", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "3", ",", "6", ",", "6", ",", "11", ",", "6", ",", "10", ",", 
     "16", ",", "7", ",", "19", ",", "11", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "3", ",", "5", ",", "5", ",", "11", ",", "4", ",", "12", ",", 
     "6", ",", "17", ",", "5", ",", "18", ",", "10"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.782449134833959*^9, 3.782449572938446*^9, {3.782449656281515*^9, 
   3.782449683339179*^9}, 3.78244972426901*^9, 3.782449804130089*^9, 
   3.7824498428733177`*^9, {3.782449970516595*^9, 3.7824500581760244`*^9}, 
   3.782450091444649*^9, {3.7824501229782677`*^9, 3.78245014281921*^9}, {
   3.7824502111752605`*^9, 3.782450255906562*^9}, 
   3.7824503724522357`*^9},ExpressionUUID->"1129b1b8-954b-4110-82d4-\
47d47ef17415"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "17", ",", "20", ",", "24", ",", "30", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.782449134833959*^9, 3.782449572938446*^9, {3.782449656281515*^9, 
   3.782449683339179*^9}, 3.78244972426901*^9, 3.782449804130089*^9, 
   3.7824498428733177`*^9, {3.782449970516595*^9, 3.7824500581760244`*^9}, 
   3.782450091444649*^9, {3.7824501229782677`*^9, 3.78245014281921*^9}, {
   3.7824502111752605`*^9, 3.782450255906562*^9}, 
   3.7824503724572225`*^9},ExpressionUUID->"ce29cf83-acf6-40cd-9b6e-\
cea3818b6f01"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"100", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"32", "68", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"17", "33", "50", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"12", "20", "35", "33", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"9", "17", "20", "24", "30", "0", "0", "0", "0", "0", "0", "0"},
     {"9", "9", "15", "18", "22", "27", "0", "0", "0", "0", "0", "0"},
     {"8", "8", "14", "13", "18", "17", "22", "0", "0", "0", "0", "0"},
     {"8", "5", "9", "11", "15", "20", "15", "17", "0", "0", "0", "0"},
     {"6", "4", "7", "13", "9", "11", "19", "17", "14", "0", "0", "0"},
     {"5", "3", "7", "10", "7", "13", "11", "13", "19", "12", "0", "0"},
     {"5", "3", "6", "6", "11", "6", "10", "16", "7", "19", "11", "0"},
     {"4", "3", "5", "5", "11", "4", "12", "6", "17", "5", "18", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.782449134833959*^9, 3.782449572938446*^9, {3.782449656281515*^9, 
   3.782449683339179*^9}, 3.78244972426901*^9, 3.782449804130089*^9, 
   3.7824498428733177`*^9, {3.782449970516595*^9, 3.7824500581760244`*^9}, 
   3.782450091444649*^9, {3.7824501229782677`*^9, 3.78245014281921*^9}, {
   3.7824502111752605`*^9, 3.782450255906562*^9}, 
   3.782450372464204*^9},ExpressionUUID->"a2b057b3-82db-4d48-9ebe-\
5ddcb7817316"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$144302#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.006607630410689501},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {0.006607630410689501, 0.1425958949413818}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.782449134833959*^9, 3.782449572938446*^9, {3.782449656281515*^9, 
   3.782449683339179*^9}, 3.78244972426901*^9, 3.782449804130089*^9, 
   3.7824498428733177`*^9, {3.782449970516595*^9, 3.7824500581760244`*^9}, 
   3.782450091444649*^9, {3.7824501229782677`*^9, 3.78245014281921*^9}, {
   3.7824502111752605`*^9, 3.782450255906562*^9}, 
   3.782450372532058*^9},ExpressionUUID->"b4443735-8703-4278-b5fd-\
3281dc77dc86"]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5424, 157, 400, "Input",ExpressionUUID->"9a10e850-9513-464e-9284-a9557172bec2"],
Cell[6007, 181, 2592, 59, 71, "Output",ExpressionUUID->"1129b1b8-954b-4110-82d4-47d47ef17415"],
Cell[8602, 242, 630, 12, 32, "Output",ExpressionUUID->"ce29cf83-acf6-40cd-9b6e-cea3818b6f01"],
Cell[9235, 256, 1849, 35, 232, "Output",ExpressionUUID->"a2b057b3-82db-4d48-9ebe-5ddcb7817316"],
Cell[11087, 293, 26748, 456, 235, "Output",ExpressionUUID->"b4443735-8703-4278-b5fd-3281dc77dc86"]
}, Open  ]]
}
]
*)

