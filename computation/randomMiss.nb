(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     35452,        726]
NotebookOptionsPosition[     34539,        705]
NotebookOutlinePosition[     34887,        720]
CellTagsIndexPosition[     34844,        717]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"T", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stake", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blocks", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "T"}], "}"}]}], "]"}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "T"], "+", "2"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"stake", "*", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"i", "*", 
              RowBox[{"T", "/", "rounds"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "+", "1"}], ")"}], "*", 
              RowBox[{"T", "/", "rounds"}]}]}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"rounds", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"rounds", ",", "1", ",", "12", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"padS", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PadRight", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"S", ",", "i"}], "]"}], ",", "12"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"check", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"padS", ",", "i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Part", "[", 
          RowBox[{"S", ",", "i"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"F", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T", ",", " ", 
     FractionBox["T", 
      RowBox[{"blocks", "-", "1"}]]}], "}"}], ",", 
   RowBox[{"ExtentSize", "\[Rule]", "Full"}], ",", 
   RowBox[{"ExtentMarkers", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7558647892304053`*^9, 3.7558648644791355`*^9}, {
   3.7558649576678677`*^9, 3.7558649643310404`*^9}, {3.7558651387161646`*^9, 
   3.7558651805252113`*^9}, {3.755865256844084*^9, 3.755865258937481*^9}, {
   3.755865361098215*^9, 3.7558654102636647`*^9}, {3.7558654402703977`*^9, 
   3.755865454764625*^9}, {3.755865529597777*^9, 3.7558656801859255`*^9}, {
   3.755865755720899*^9, 3.7558657654109764`*^9}, {3.7558658596967373`*^9, 
   3.7558658602532477`*^9}, {3.7558660610629663`*^9, 3.755866083037174*^9}, {
   3.755866132693327*^9, 3.75586613875212*^9}, {3.755866353408311*^9, 
   3.755866355889677*^9}, {3.7558668008887253`*^9, 3.755866877261429*^9}, 
   3.755866916770742*^9, 3.755867407698925*^9, {3.7558675020576086`*^9, 
   3.7558675153041735`*^9}, 3.75591633161433*^9, {3.7559163970535555`*^9, 
   3.7559164098890495`*^9}, 3.755916498534621*^9, {3.7559174909021373`*^9, 
   3.7559174913820915`*^9}, {3.7722443421010466`*^9, 
   3.7722443948919573`*^9}, {3.7722444810790415`*^9, 3.7722444821242476`*^9}, 
   3.7722445345630994`*^9, {3.7722445851339426`*^9, 3.7722445866279497`*^9}, {
   3.7722446728141794`*^9, 3.7722446873842382`*^9}, {3.772244945772251*^9, 
   3.7722449884063063`*^9}, {3.7722450338927407`*^9, 3.772245046482094*^9}, {
   3.7823487977051272`*^9, 3.7823488429934096`*^9}, {3.7823489652807035`*^9, 
   3.7823489927990932`*^9}, {3.782349050244972*^9, 
   3.782349071492824*^9}},ExpressionUUID->"d90c6966-206f-400a-b69f-\
2f39d1846949"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.7823491402448497`*^9}},ExpressionUUID->"f22fdb51-7dd9-4a02-a177-\
47ccf8c556e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "100", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31", ",", "69", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "19", ",", "36", ",", "45", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "16", ",", "15", ",", "30", ",", "39", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "13", ",", "8", ",", "26", ",", "20", ",", "33", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "8", ",", "12", ",", "24", ",", "18", ",", "28", ",", "0", ",",
      "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "9", ",", "5", ",", "20", ",", "16", ",", "19", ",", "23", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "9", ",", "4", ",", "11", ",", "19", ",", "11", ",", "21", ",", 
     "19", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "8", ",", "4", ",", "5", ",", "15", ",", "15", ",", "9", ",", 
     "21", ",", "15", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "7", ",", "5", ",", "3", ",", "10", ",", "16", ",", "10", ",", 
     "9", ",", "20", ",", "13", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "6", ",", "5", ",", "2", ",", "6", ",", "13", ",", "14", ",", 
     "7", ",", "11", ",", "19", ",", "11", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "6", ",", "6", ",", "3", ",", "3", ",", "9", ",", "13", ",", 
     "10", ",", "6", ",", "12", ",", "18", ",", "10"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.782349141981028*^9}},ExpressionUUID->"2ee59dfb-a98c-4f43-81e9-\
e71858b66b9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "101", ",", 
   "101", ",", "102", ",", "99", ",", "99", ",", "99", ",", "101"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.7823491419850173`*^9}},ExpressionUUID->"c6a0ad1e-cf53-40b9-ba26-\
12b41adfa6fd"],

Cell[BoxData[
 RowBox[{"0.025447977871235167`", " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    RowBox[{"Cos", "[", "t", "]"}], "-", 
    RowBox[{"Sin", "[", "t", "]"}], "+", 
    RowBox[{"t", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "9"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.782349141989007*^9}},ExpressionUUID->"e2429b1e-fefa-42ca-ab79-\
ecbff673d23b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aL+/KRFkI+4Mn7BjQ993l3nYiyfCE7J4xn8ObMhfsmAwjy0RZjqr7fVd2JDi
TKG88kICkEV2/rzkzYaEK2SVtj4mwPH07I3bkWzoAqvst3LfBDCm9ormVbEh
7Vm1UKFf8VDS4zdIamBDhA3HkZTheBBd251Ga2FDzhMXHdzb4mFY031PXR8b
KttaaPlZGA/ODI4jX+fZkIp7drKNZzy0TBeufVtmQ1WUBJYj9vGgxHOxcvYv
GzIs6lS5fCkeFg3Tddc52FH/rfmU4BPxEPhF3URIhh1Fe5Xt9eWKh/G/X4Ul
9rAjVzG6wPstIugRQr7sOsCO9jyd0b3whwg81zuvqKizIxZX7xNXhojgFuIt
dxTY0QRBeHiskwiduVLTmifZ0Vuvm4EljUR49fOG+1kjdpQbesDnQgkR1nn5
DxtfYkfcPr4FIgVEsFKlr5hbsyOi/H+RqplE2HWPOcDBmR2tJLJJXI0mwuP4
PJ1bbuwopBvi74URYariApvXHSzeNHvP0SAiFDIlPX/4kB2p86SPU7yIwFZ9
6LL0E3Y0b9er/cyVCDYPm2U/PGNHr1yPO5CciEDTvjZvHc2ODiWXZEleIwLv
9o2Kv6/Y0YOdHw17rYngVBP9JDGZHdlYRlcOmhOhKmi/iUYmO+Iya9BUMiWC
O7PFzL1CdlTucKiadpYIjbW/S4Sp7OjghTrHuVNEkA4OfVhSxo6eKN5y8tQl
greuzDnTD+zI59tHQT1tInSwlIn+qWNHdQHs5Q5aRNhbbzgR1YTp3Rp78/k4
EQIfT5FUOtgR06lctRh1IvSdDPRp/8yO/tt+MC/1KBEOsomech1gR2Lh4yYb
akQIayAJ7BhlR919RY+yDxNhLOTUcP4kO+pxEw1JP0QEjVNf8/RnseebSubO
qhIhmv3enenf7Ogn84UjTzGeYezUfrrCjuhOtb5eGOs8zebZs8mOvg8IM4ow
Tjit1Ve/nQO9lblph7DnLXD0ZF7n4EClNx1ipLHz9D/ecmPeyYGirFXfGGPx
ZISyHs8Q5EDpgj5zPUewep9JZtPGc6B4Rde8t8eIYMKl1vlVigOd/ly2u1eD
CAVNLcn+shyI0RP+2kSTCCzh150l93Og9uzIu7sR5o+zfw+/U+ZA5g8WhvT+
IwKVO5bJUo0DHbQw3/VeD/Nji0LLmgYHqlX/FhqqT8Tue7WviIgDVfIetcg7
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
HZUF8D/3deqm
       "]]},
     Annotation[#, "Charting`Private`Tag$60054#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.023629970660160562`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9}, {0.023629970660160562`, 0.25076350503240424`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.7823491420328918`*^9}},ExpressionUUID->"736dbd23-7fc7-4d8c-93b1-\
203681722642"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{-2.25, 0.05612981566262342}, {2.25, 0.0763439336137055}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{2.25, 0.05612981566262342}, {6.75, 0.15909443823061006}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{6.75, 0.05612981566262342}, \
{11.25, 0.05612981566262342}]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[
    1.6], {}, {{}, 
     LineBox[{{{-2.25, 0.0763439336137055}, {2.25, 0.0763439336137055}}, {{
      2.25, 0.15909443823061006`}, {6.75, 0.15909443823061006`}}, {{6.75, 
      0.05612981566262342}, {11.25, 0.05612981566262342}}}]}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->NCache[{
     Rational[-9, 4], 0.05612981566262342}, {-2.25, 0.05612981566262342}],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->NCache[{{
      Rational[-9, 4], 
      Rational[45, 4]}, {0.05612981566262342, 0.15909443823061006`}}, {{-2.25,
     11.25}, {0.05612981566262342, 0.15909443823061006`}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.772244890057159*^9, {3.772244973353537*^9, 3.772244989011688*^9}, {
   3.7722450253555875`*^9, 3.7722450470954533`*^9}, 3.7722450855515304`*^9, {
   3.7722451608752193`*^9, 3.7722451662837653`*^9}, 3.78234887348912*^9, {
   3.7823489691981525`*^9, 3.7823489936566467`*^9}, 3.7823490281039934`*^9, {
   3.7823490636176434`*^9, 3.7823490924766674`*^9}, {3.782349131842986*^9, 
   3.782349142068762*^9}},ExpressionUUID->"231b1de0-d1e8-40cc-9767-\
1c480c652831"]
}, Open  ]]
},
WindowSize->{1525, 767},
WindowMargins->{{Automatic, 6}, {Automatic, 106}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5041, 128, 248, "Input",ExpressionUUID->"d90c6966-206f-400a-b69f-2f39d1846949"],
Cell[5624, 152, 513, 8, 32, "Output",ExpressionUUID->"f22fdb51-7dd9-4a02-a177-47ccf8c556e0"],
Cell[6140, 162, 2627, 59, 71, "Output",ExpressionUUID->"2ee59dfb-a98c-4f43-81e9-e71858b66b9e"],
Cell[8770, 223, 689, 13, 32, "Output",ExpressionUUID->"c6a0ad1e-cf53-40b9-ba26-12b41adfa6fd"],
Cell[9462, 238, 839, 18, 36, "Output",ExpressionUUID->"e2429b1e-fefa-42ca-ab79-ecbff673d23b"],
Cell[10304, 258, 20167, 348, 235, "Output",ExpressionUUID->"736dbd23-7fc7-4d8c-93b1-203681722642"],
Cell[30474, 608, 4049, 94, 245, "Output",ExpressionUUID->"231b1de0-d1e8-40cc-9767-1c480c652831"]
}, Open  ]]
}
]
*)

